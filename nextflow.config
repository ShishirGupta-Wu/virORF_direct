//============================================================================//
// Define params
//============================================================================//

// Global input
//============================================================================//
params.out_dir = 'output'

// General inputs
params.dRNAseq_reads = "input/*fastq"
params.ref_fasta = "$baseDir/resources/sars_cov2_NC_045512.2_genome.fasta"

// Synthetic read generation
params.min_junction_length = 1000

// Checking for leader sequence
params.leader_fa = "$baseDir/resources/SARS2_leader.fasta"
params.blast_leader_type = 'blastn'
params.blast_leader_min_alignment_length = 45
params.blast_leader_max_start_position = 50
params.blast_leader_min_pident = 0.85

// Prodigal ORF calling
params.prodigal_mode = "single"
params.prodigal_genetic_code = 11 //standard with nTG except no CTG
params.prodigal_compress = "TRUE"
params.prodigal_closed_edges = 1 //Closed edges

// diamond
params.diamond_database = "$baseDir/resources/sars_cov2_cannonical_and_virORFsense_ORF1_split.dmnd"
params.diamond_outfmt = "6 qseqid qlen sseqid evalue bitscore pident length qstart qend sstart send"
params.diamond_temp_dir = "temp"
params.diamond_evalue = "10"

// Parsing diamond
params.parse_orf_assignments_diamond_fields = "qseqid qlen sseqid evalue bitscore pident length qstart qend sstart send"
params.parse_orf_assignments_min_pident = "95"
params.parse_orf_assignments_min_ok_nterm_extension = "20"

//============================================================================//
// Process
//============================================================================//
profiles {

  o2_slurm {
      process {

            // Global setting
            executor = 'slurm'
            queue = 'short'
            cache = 'lenient'
            conda = "$baseDir/resources/conda_ymls/virORF_conda_linux.yml"
            beforeScript = "module load gcc conda2"

            // Error handling
            errorStrategy = 'retry'
            maxRetries = 3

            // resources
            withName: minimap_sars2 {
              time = { 45.m * task.attempt }
              memory = { 40.GB * task.attempt }
              cpus = { 5 * task.attempt }
            }

            withName: generate_synthetic_transcripts {
              time = { 30.m * task.attempt }
              memory = { 20.GB * task.attempt }
              cpus = { 1 * task.attempt }
            }

            withName: blast_leader {
              time = { 1.h * task.attempt }
              memory = { 20.GB * task.attempt }
              cpus = { 4 * task.attempt }
            }

            withName: prodigal {
              time = { 1.h * task.attempt }
              memory = { 20.GB * task.attempt }
              cpus = { 4 * task.attempt }
            }

            withName: prodigal_to_orfs_direct {
              time = { 1.h * task.attempt }
              memory = { 20.GB * task.attempt }
              cpus = { 1 * task.attempt }
            }

            withName: diamond {
              time = { 1.h * task.attempt }
              memory = { 10.GB * task.attempt }
              cpus = { 4 * task.attempt }
            }

            withName: parse_orf_assignments {
              time = { 20.m * task.attempt }
              memory = { 10.GB * task.attempt }
              cpus = 1
            }

            withName: find_trs_sites {
              time = { 20.m * task.attempt }
              memory = { 10.GB * task.attempt }
              cpus = 1
            }

      }

      //============================================================================//
      // Misc settings
      //============================================================================//

      executor {
            // Let nextflow submit up to this many jobs in parallel at one time
            queueSize = 5000
      }

      report {
            enabled = true
            file = "$params.out_dir/reports/pipeline_report.html"
      }

      timeline {
            enabled = true
            file = "$params.out_dir/reports/timeline.html"
          }

      trace {
            enabled = true
            file = "$params.out_dir/reports/trace.tsv"
      }

      conda {
            cacheDir = "/n/data2/dfci/medonc/decaprio/jason/nf_conda_envs"
      }

  } // this closes the o2_slurm profile

  o2_local {
      process {
            // Global setting
            executor = 'local'
            cache = 'lenient'
            conda = "$baseDir/resources/conda_ymls/virORF_conda_linux.yml"
            beforeScript = "module load gcc conda2"

            // Error handling
            errorStrategy = 'retry'
            maxRetries = 3
      }

      //============================================================================//
      // Misc settings
      //============================================================================//

      executor {
            // Let nextflow submit up to this many jobs in parallel at one time
            queueSize = 5000
      }

      report {
            enabled = true
            file = "$params.out_dir/reports/pipeline_report.html"
      }

      timeline {
            enabled = true
            file = "$params.out_dir/reports/timeline.html"
          }

      trace {
            enabled = true
            file = "$params.out_dir/reports/trace.tsv"
      }

      conda {
            cacheDir = "/n/data2/dfci/medonc/decaprio/jason/nf_conda_envs"
      }

  } // this closes the o2_local profile


  mac {
      process {
            // Global setting
            executor = 'local'
            cache = 'lenient'
            conda = "$baseDir/resources/conda_ymls/virORF_conda_mac.yml"

            // Error handling
            errorStrategy = 'retry'
            maxRetries = 3
      }

      //============================================================================//
      // Misc settings
      //============================================================================//

      executor {
            // Let nextflow submit up to this many jobs in parallel at one time
            queueSize = 5000
      }

      report {
            enabled = true
            file = "$params.out_dir/reports/pipeline_report.html"
      }

      timeline {
            enabled = true
            file = "$params.out_dir/reports/timeline.html"
          }

      trace {
            enabled = true
            file = "$params.out_dir/reports/trace.tsv"
            }

      conda {
            cacheDir = "/Users/jnom/Documents/Research/DeCaprio_Meyerson/code/conda_envs"
            }
  } // this closes the mac profile

} // this closes the entire profiles thing
